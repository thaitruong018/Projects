{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Thai_5.6_WeeklyProject_BostonHouse","provenance":[{"file_id":"1rkzAdWxFeCj3OrLc0BkJ0td02pYlwirs","timestamp":1629551927223}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"Sh5OPHm9f9sA"},"source":["# Weekly Project: Predicting Boston Housing prices"]},{"cell_type":"markdown","metadata":{"id":"poI7w8SGghl8"},"source":["In this project, you will create, evaluate the performance and predictive power of your model on data collected from homes in suburbs of Boston, Massachusetts\n","\n","The dataset for this project originates from the UCI Machine Learning Repository. The Boston housing data was collected in 1978 and each of the 506 entries represent aggregated data about 14 features for homes from various suburbs in Boston, Massachusetts. **Data preprocessing has been applied to your dataset**. For the purposes of this project, the following preprocessing steps have been made to the dataset:\n","\n","- 16 data points have an 'MEDV' value of 50.0. These data points likely contain missing or censored values and have been removed.\n","- 1 data point has an 'RM' value of 8.78. This data point can be considered an outlier and has been removed.\n","- The features 'RM', 'LSTAT', 'PTRATIO', and 'MEDV' are essential. The remaining non-relevant features have been excluded.\n","- The feature 'MEDV' has been multiplicatively scaled to account for 35 years of market inflation.\n","\n","Your task is to apply a machine learning model of your choice to predict the price of houses in a Boston neighborhood (which is column 'MEDV')\n"]},{"cell_type":"markdown","metadata":{"id":"nJ1Wd-C_sKli"},"source":["The dataset can be accessed here: https://raw.githubusercontent.com/anhquan0412/boston_housing/master/housing.csv\n"]},{"cell_type":"markdown","metadata":{"id":"2rMOGC22m8N6"},"source":["Here are the few steps you can follow"]},{"cell_type":"markdown","metadata":{"id":"RGFzFBZmmOT6"},"source":["\n","\n","# Step 1: Data Exploration (EDA)\n","\n","Familiarizing yourself with the data through an explorative process is a fundamental practice to help you better understand and justify your results.\n","\n","As a reminder, we are using three features from the Boston housing dataset: 'RM', 'LSTAT', and 'PTRATIO'. For each data point (neighborhood):\n","\n","- 'RM' is the average number of rooms among homes in the neighborhood.\n","- 'LSTAT' is the percentage of homeowners in the neighborhood considered \"lower class\" (working poor).\n","- 'PTRATIO' is the ratio of students to teachers in primary and secondary schools in the neighborhood.\n","\n","**Question**: For each of the three features above, do you think that an increase in the value of that feature would lead to an increase in the value of 'MEDV' or a decrease in the value of 'MEDV'? Justify your answer for each by plotting or calculating the correlation\n","\n"]},{"cell_type":"code","metadata":{"id":"-nHh-FYPm98r"},"source":["# import libraries\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","from sklearn.pipeline import Pipeline\n","from sklearn.linear_model import LinearRegression\n","from sklearn.metrics import mean_absolute_error, mean_squared_error\n","from sklearn.preprocessing import MinMaxScaler, StandardScaler, PolynomialFeatures\n","from sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV\n","%matplotlib inline"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"bbts8Kn36FUI","executionInfo":{"status":"ok","timestamp":1629718958455,"user_tz":-420,"elapsed":379,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"25792076-06a1-4865-c8ab-145fd9643c75"},"source":["# get dataset\n","df = pd.read_csv('https://raw.githubusercontent.com/anhquan0412/boston_housing/master/housing.csv')\n","df.head()   #display the first 5 rows"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>RM</th>\n","      <th>LSTAT</th>\n","      <th>PTRATIO</th>\n","      <th>MEDV</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6.58</td>\n","      <td>4.98</td>\n","      <td>15.30</td>\n","      <td>504000.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6.42</td>\n","      <td>9.14</td>\n","      <td>17.80</td>\n","      <td>453600.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7.18</td>\n","      <td>4.03</td>\n","      <td>17.80</td>\n","      <td>728700.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>7.00</td>\n","      <td>2.94</td>\n","      <td>18.70</td>\n","      <td>701400.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7.15</td>\n","      <td>5.33</td>\n","      <td>18.70</td>\n","      <td>760200.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    RM  LSTAT  PTRATIO      MEDV\n","0 6.58   4.98    15.30 504000.00\n","1 6.42   9.14    17.80 453600.00\n","2 7.18   4.03    17.80 728700.00\n","3 7.00   2.94    18.70 701400.00\n","4 7.15   5.33    18.70 760200.00"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"23cxWEsN7WJj","executionInfo":{"status":"ok","timestamp":1629718959945,"user_tz":-420,"elapsed":10,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"f5595211-f48c-4299-cbcf-f2979485cf67"},"source":["# overall info\n","df.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 489 entries, 0 to 488\n","Data columns (total 4 columns):\n"," #   Column   Non-Null Count  Dtype  \n","---  ------   --------------  -----  \n"," 0   RM       489 non-null    float64\n"," 1   LSTAT    489 non-null    float64\n"," 2   PTRATIO  489 non-null    float64\n"," 3   MEDV     489 non-null    float64\n","dtypes: float64(4)\n","memory usage: 15.4 KB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"l-brJYSs6Bae"},"source":["# change display float format\n","pd.options.display.float_format='{:.2f}'.format"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":297},"id":"RwvN5ZRC_efN","executionInfo":{"status":"ok","timestamp":1629718965437,"user_tz":-420,"elapsed":458,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"720c003b-2682-4f8e-9a4a-5cee741d8b72"},"source":["# statistical info\n","df.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>RM</th>\n","      <th>LSTAT</th>\n","      <th>PTRATIO</th>\n","      <th>MEDV</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>489.00</td>\n","      <td>489.00</td>\n","      <td>489.00</td>\n","      <td>489.00</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>6.24</td>\n","      <td>12.94</td>\n","      <td>18.52</td>\n","      <td>454342.94</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.64</td>\n","      <td>7.08</td>\n","      <td>2.11</td>\n","      <td>165340.28</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>3.56</td>\n","      <td>1.98</td>\n","      <td>12.60</td>\n","      <td>105000.00</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>5.88</td>\n","      <td>7.37</td>\n","      <td>17.40</td>\n","      <td>350700.00</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>6.18</td>\n","      <td>11.69</td>\n","      <td>19.10</td>\n","      <td>438900.00</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>6.58</td>\n","      <td>17.12</td>\n","      <td>20.20</td>\n","      <td>518700.00</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>8.40</td>\n","      <td>37.97</td>\n","      <td>22.00</td>\n","      <td>1024800.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["          RM  LSTAT  PTRATIO       MEDV\n","count 489.00 489.00   489.00     489.00\n","mean    6.24  12.94    18.52  454342.94\n","std     0.64   7.08     2.11  165340.28\n","min     3.56   1.98    12.60  105000.00\n","25%     5.88   7.37    17.40  350700.00\n","50%     6.18  11.69    19.10  438900.00\n","75%     6.58  17.12    20.20  518700.00\n","max     8.40  37.97    22.00 1024800.00"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":744},"id":"yGJoD7Z1GAND","executionInfo":{"status":"ok","timestamp":1629718972687,"user_tz":-420,"elapsed":4682,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"7c0c1af6-230a-4ce1-c5af-14c63b7349e5"},"source":["# plotting pairplot to observe the relationships between 4 variables\n","sns.pairplot(data = df, corner=True)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.PairGrid at 0x7ff6b4ba4690>"]},"metadata":{},"execution_count":46},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x720 with 14 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":287},"id":"yg2JAMzt_59v","executionInfo":{"status":"ok","timestamp":1629718977062,"user_tz":-420,"elapsed":790,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"02c08182-29dc-4a07-b69b-5a30c2817d4b"},"source":["# calculate correlation\n","sns.heatmap(data = df.corr(), annot=True)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7ff6b449bbd0>"]},"metadata":{},"execution_count":47},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"Mkd7tJ3d1XP9"},"source":["**Answer:** From 2 charts above, we can see that there is a strong positive correlation between the MEDV and RM. By contrast, the MEDV has the opposite direction with the LSTAT. And the relationship between MEDV and PTRATIO is neutral but negative.  \n","In other words, an increase in the value of RM would lead to an increase in the value of 'MEDV' and an increase in the value of LSTAT would lead to an decrease in the value of 'MEDV'"]},{"cell_type":"markdown","metadata":{"id":"yEi9eqNqm-RH"},"source":["# Step 2: Get to know our performance Metric\n","\n","Do a quick read on Mean Absolute Error (MAE), because that is going to be the metric we are going to use for this task.\n","\n","https://scikit-learn.org/stable/modules/generated/sklearn.metrics.mean_absolute_error.html\n","\n","**Question**: Calculate MAE on these data points by using the Sklearn library\n","```python\n","y_true = [3, -0.5, 2, 7, 4.2]\n","y_pred = [2.5, 0, 2.1, 7.8, 5.3]\n","```\n","If a model is making these prediction (y_pred), is this a good model?"]},{"cell_type":"code","metadata":{"id":"ArkOOX2MnvoF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1629719122272,"user_tz":-420,"elapsed":354,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"06c5ee67-686b-4752-b748-0991ccbd0ba8"},"source":["# calculate MAE of example data\n","y_true = [3, -0.5, 2, 7, 4.2]\n","y_pred = [2.5, 0, 2.1, 7.8, 5.3]\n","print('Mean absolute error of this example is:',mean_absolute_error(y_true, y_pred))\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mean absolute error of this example is: 0.5999999999999999\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i8OWHUyB6zUa","executionInfo":{"status":"ok","timestamp":1629719135476,"user_tz":-420,"elapsed":532,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"83efefe2-762e-4a46-b1ae-0442aa8f0c7e"},"source":["# calculations of two lists\n","print('min:',min(y_true),'|max:' ,max(y_true),'|mean:' ,sum(y_true)/len(y_true))\n","print('min:',min(y_pred),'|max:' ,max(y_pred),'|mean:' ,sum(y_pred)/len(y_pred))\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["min: -0.5 |max: 7 |mean: 3.1399999999999997\n","min: 0 |max: 7.8 |mean: 3.54\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"IxJFBp6R6tQw"},"source":["**Answer:** From my viewpoint, this is a good model because the range of two lists is quite the same which means that there is insignificant differences between these two lists"]},{"cell_type":"markdown","metadata":{"id":"X78OJElUnwfE"},"source":["# Step 3: Train our machine learning model\n","\n","Your task is to build a pipeline to preprocess this data and train a linear regression model to predict the house price. Make sure to follow all the recommended practices we mention in class. \n","\n","Here are 2 pipelines you should implement \n","- The first pipeline include: MinMaxScaler (or Standard Scaler) as **Transformer** (to preprocess), and Linear Regression as **Estimator** (machine learning model)\n","\n","- The second pipeline include: Polynomial Feature, **then** Standard Scaler as **Transformers**, and Linear Regression as **Estimator**. Pay attention that you have 2 transformers in a very specific order.\n","\n","\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"tjMnpPnq3kCp"},"source":["# Define the first pipeline\n","first_pipeline = Pipeline([('scaler', MinMaxScaler()), \n","                           ('model', LinearRegression())                           \n","                          ])                        \n","                          "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"GxWRvSLd3mfc"},"source":["# Define the second pipeline\n","second_pipeline = Pipeline([('polynomial', PolynomialFeatures(include_bias=False)),\n","                            ('scaler', StandardScaler()),\n","                            ('model', LinearRegression())\n","                          ])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"NmZvaFnG2HA2"},"source":["## Part 1: Use a simple train-test split\n","\n","*Do these following step for the first pipeline only*:\n","\n","- Use sklearn `train_test_split` to split data into train set and test set. Use random_state = 42\n","- Fit the pipeline on train set\n","- Use pipline to predict the test set\n","- Calculate the MAE on test set"]},{"cell_type":"code","metadata":{"id":"XI4kz-jC2ChI"},"source":["# create variables\n","X = df.drop(columns =['MEDV'])\n","y = df['MEDV']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"5AufS9xkpbO1"},"source":["# Partition data\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = .2, random_state = 42)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Jkatc-EZ0Rl3","executionInfo":{"status":"ok","timestamp":1629719419700,"user_tz":-420,"elapsed":9,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"dffe1f64-0a74-4159-c182-be8e8243482a"},"source":["# Fit pipeline on train set\n","first_pipeline.fit(X_train, y_train)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pipeline(memory=None,\n","         steps=[('scaler', MinMaxScaler(copy=True, feature_range=(0, 1))),\n","                ('model',\n","                 LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,\n","                                  normalize=False))],\n","         verbose=False)"]},"metadata":{},"execution_count":58}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3NMAnk7J2YX9","executionInfo":{"status":"ok","timestamp":1629719421506,"user_tz":-420,"elapsed":5,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"bfa44689-b6d1-4162-b4f8-e6d208c0d1a1"},"source":["# predict training set\n","y_train_pred = first_pipeline.predict(X_train)\n","#print(f'Predictions on training data {y_train_pred}')\n","\n","# Predict test set\n","y_test_pred = first_pipeline.predict(X_test)\n","print(f'Predictions on test data: {y_test_pred}')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Predictions on test data: [342593.79029768 506257.0916297  410499.93166174 237792.7411537\n"," 327005.79653234 403018.068531   261060.38389067 701308.47374597\n"," 362924.70496746 585818.82333754 456966.23009711 365587.84857713\n"," 266036.4241684  265799.92818911 385359.28098829 525974.87433762\n"," 388922.38353646 365210.2410349  365315.35425769 420439.93835104\n"," 459794.49010487 461685.28906052 369745.76216645 644034.09840583\n"," 467828.26948158 473745.56661447 498572.57258183 634774.91735229\n"," 679806.33028785 168957.24703839 514819.05350129 239552.37320321\n"," 536885.46626665 508876.38428348 305150.22603695 502246.53271674\n"," 633616.8915942  498079.88203251 664064.07473373 640154.94320999\n"," 417975.24110305 413013.84915423 321372.49298713 454781.42006081\n"," 392252.56415048 583126.90625531 354489.73066978 392557.51784978\n"," 411096.16495751 393192.83809688 276193.78443298 584399.72540512\n"," 571878.35038497 428494.3472316  501643.04699658 507982.22344214\n"," 366272.30476642 532727.43571945 440147.75671624 276035.32200853\n"," 475228.76356089 383760.04325352 516913.45770147 475003.7370895\n"," 570709.98844992 755704.0690957  530831.9167639  537408.663465\n","  19532.43641433 345192.65424488 273964.90585283 411711.05059052\n"," 425191.62275258 456485.9726244  350140.83517251 462944.00611073\n"," 468058.95069006 424612.225707   519797.70298078 420541.40248899\n"," 513071.80427338 571461.91574647 378549.15343831 283145.38113578\n"," 480427.57453125 570576.42448841 439187.72257502 500620.05597204\n"," 382443.52148658 421695.97579263 461775.6500832  400911.2349582\n"," 382508.50914966 487964.05695847 397345.90511691 569811.9044274\n"," 463015.8748299  270976.11025369]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v_D6gfN98T4v","executionInfo":{"status":"ok","timestamp":1629719424879,"user_tz":-420,"elapsed":483,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"0d8feb8f-1e7b-4f80-8fb9-5f643c0250b7"},"source":["# Calculate the MAE on test set\n","print('MAE of testing data is:',mean_absolute_error(y_test,y_test_pred))\n","\n","# Calculate the MAE on train set\n","print('MAE of training data is: ',mean_absolute_error(y_train,y_train_pred))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["MAE of testing data is: 64277.288656703386\n","MAE of training data is:  66173.47210488864\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"W44cDuYi4EoP"},"source":["* We can obviously see that the MAE of both sets is quite big which would lead to an ineffective model."]},{"cell_type":"markdown","metadata":{"id":"cgC6Fpme3t0d"},"source":["## Part 2: Use 5 fold cross-validation without polynomial features\n","\n","*Do these following steps for first pipeline*\n","\n","You don't do a simple train-test split. Instead, you will **do train-test split 5 times** and then calculate the mean of the MAE score for these 5 test set.\n","\n","Take a look at sklearn cross_validation here: https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.cross_val_score.html and write the code to **calculate the mean of MAE of these 5-fold cross validation results**\n","\n","\n","\n","*Hint*: You need to read the documentation to know exactly what will be returned when you use `cross_val_score(your_pipeline, X,y, scoring=\"neg_mean_absolute_error\")`. And note that the only scoring that similar to MAE in `cross_val_score` is `neg_mean_absolute_error`, which means the result will be negative MAE. All you need to do is multiply the result by -1 to turn them into positive MAE."]},{"cell_type":"code","metadata":{"id":"iSLg0gdF765x","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1629719614741,"user_tz":-420,"elapsed":405,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"6240c5fa-d6a2-4a42-9187-299611c75609"},"source":["# Calculate individual MAE score by using cross validation\n","scores = -1* cross_val_score(first_pipeline, X, y, cv=5, scoring = 'neg_mean_absolute_error' )\n","scores"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([43813.0860629 , 72928.11409471, 95899.64728565, 80260.79735502,\n","       83546.26020565])"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pMYJpnxCJin5","executionInfo":{"status":"ok","timestamp":1629719615875,"user_tz":-420,"elapsed":8,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"842ab9ae-3046-4512-ee5e-5a855d6a5aa7"},"source":["# Calculate the mean of MAE of these 5-fold cross validation\n","print(\"Average MAE score (across 5 times):\", scores.mean())"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Average MAE score (across 5 times): 75289.58100078856\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"WKntpuyt77c7"},"source":["## Part 3: Use 5 fold cross-validation with polynomial features"]},{"cell_type":"markdown","metadata":{"id":"SWWQRvHt7_ZX"},"source":["*Do these following steps for first pipeline*\n","\n","Repeat everything in **Part 2** on the second pipeline (The one with Polynomial Feature as one of the transformer). For this one, write a `for` loop to test out different degree for Polynomial Feature. Here is roughly what your code should look like\n","```\n","for each value n in a range of your choice:\n","    - create a pipeline including Polynomial Feature(degree=n) => MinMaxScaler => Linear Regression\n","    - call cross_val_score on this pipeline\n","    - calculate mean of MAE scores from cross validation\n","```\n","\n"]},{"cell_type":"code","metadata":{"id":"CxwX9opy7o4p","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1629717459442,"user_tz":-420,"elapsed":1411,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"92bcbbb3-9411-4c78-9f02-680838a38d75"},"source":["# Calculate mean of MAE of each diff degree\n","mean_of_MAE= []  # create an empty list\n","# use for loop to find out the acceptable degree\n","for n in range(2,10):\n","  second_pipeline = Pipeline([('polynomial', PolynomialFeatures(degree= n, include_bias=False)),\n","                            ('scaler', StandardScaler()),\n","                            ('model', LinearRegression())\n","                          ])\n","  \n","  scores = -1* cross_val_score(second_pipeline, X, y, cv=5, scoring = 'neg_mean_absolute_error' )\n","  # calculate mean of MAE of each degree and append to mean_of_MAE list\n","  mean_of_MAE.append(scores.mean())\n","# display results\n","print('Mean of the MAE of each diff degree from 2 to 9 respectively:')\n","mean_of_MAE\n","  "],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mean of the MAE of each diff degree from 2 to 9 respectively:\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["[56091.068829508455,\n"," 62421.70749224383,\n"," 83505.75559233894,\n"," 86489.00945796873,\n"," 643770.7844618866,\n"," 2759056.0924622524,\n"," 33766320.958519176,\n"," 197098611.18876922]"]},"metadata":{},"execution_count":24}]},{"cell_type":"markdown","metadata":{"id":"nO4Zr1IwCqFA"},"source":["*Bonus*: after you finish this lab, go back to this question, and consider a better way to search for the best degree by using gridsearchCV: https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.GridSearchCV.html\n"]},{"cell_type":"code","metadata":{"id":"hGC7m2w0-nF0"},"source":["# create a pipeline to find out the ultimate degree\n","find_degree_pipeline = Pipeline([('polynomial', PolynomialFeatures(include_bias=False)),\n","                                 ('scaler', StandardScaler()),\n","                                ('model', LinearRegression())\n","                          ])\n","# Gridsearch\n","grid_search = GridSearchCV(find_degree_pipeline, param_grid = {'polynomial__degree':np.arange(2,11)} ,\n","                           cv=5, scoring='neg_mean_absolute_error', \n","                           return_train_score= True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xVaJYzUEAaak","executionInfo":{"status":"ok","timestamp":1629717459444,"user_tz":-420,"elapsed":35,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"442ffd7f-69ab-4069-f834-215a6ecd2c18"},"source":["# Fit data with all sets of parameters\n","grid_search.fit(X, y)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=5, error_score=nan,\n","             estimator=Pipeline(memory=None,\n","                                steps=[('polynomial',\n","                                        PolynomialFeatures(degree=2,\n","                                                           include_bias=False,\n","                                                           interaction_only=False,\n","                                                           order='C')),\n","                                       ('scaler',\n","                                        StandardScaler(copy=True,\n","                                                       with_mean=True,\n","                                                       with_std=True)),\n","                                       ('model',\n","                                        LinearRegression(copy_X=True,\n","                                                         fit_intercept=True,\n","                                                         n_jobs=None,\n","                                                         normalize=False))],\n","                                verbose=False),\n","             iid='deprecated', n_jobs=None,\n","             param_grid={'polynomial__degree': array([ 2,  3,  4,  5,  6,  7,  8,  9, 10])},\n","             pre_dispatch='2*n_jobs', refit=True, return_train_score=True,\n","             scoring='neg_mean_absolute_error', verbose=0)"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vYGfjS7sY5UM","executionInfo":{"status":"ok","timestamp":1629717459445,"user_tz":-420,"elapsed":33,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"3855406c-1ab4-4b3a-ef2d-99e1ecfcd559"},"source":["# Find the best degree\n","print('The best degree based on GridsearchCV calculation is:',grid_search.best_params_['polynomial__degree'])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["The best degree bases on GridsearchCV calculation is: 2\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"mrwhDUznpbzB"},"source":["# Step 4: Reporting your MAE\n","\n","From part 2 and part 3, which pipeline ends up with the lowest mean MAE from cross validation? And what is that MAE?"]},{"cell_type":"markdown","metadata":{"id":"_yNBmoHvNLAX"},"source":["**Answer:** From part 2 and part3, the second pipeline ends up with the lowest mean MAE from cross validation. And the ultimate mean MAE is 56091.07, accompanied by degree = 2 in terms of comparing within two pipelines.  \n","However, we need to consider the appropriate degree of polynominal features when we using polynomial method to avoid being overfitted or underfitted"]},{"cell_type":"markdown","metadata":{"id":"pvNfEbcYqtAU"},"source":["# Step 5: Making predictions"]},{"cell_type":"markdown","metadata":{"id":"vwDl5_7qqurr"},"source":["Imagine that you were a real estate agent in the Boston area looking to use this model to help price homes owned by your clients that they wish to sell. You have collected the following information from three of your clients:\n","\n","|Feature\t|Client 1\t|Client 2\t|Client 3|\n","|-----------|-----------|-----------|--------|\n","|Total number of rooms in home\t|5 rooms\t|4 rooms\t|8 rooms|\n","|Neighborhood poverty level (as %)\t|17%\t|32%\t|3%|\n","|Student-teacher ratio of nearby schools\t|15-to-1\t|22-to-1\t|12-to-1|\n","\n","Based on your model, what price would you recommend each client sell his/her home at?\n"]},{"cell_type":"markdown","metadata":{"id":"TzTxuKu2-c0C"},"source":["Note that at this point, you haven't had a trained model to make the prediction on this data. So we will create a pipeline and train it.\n","\n","To do this question, you need to\n","- Redefine the best pipeline that you report in step 4\n","- **Fit** this pipeline on the entire dataset given at the beginning (we don't need to do train/test split here as we already know this is our best pipeline)\n","- Manually create a new test data including 3 clients from the table above\n","- Use the pipeline you have fitted to **predict** this new test data\n","- Save the prediction to a variable called `client_preds`"]},{"cell_type":"code","metadata":{"id":"FSudp6WNR41w"},"source":["# Redefine the ultimate pipeline\n","final_pipeline = Pipeline([('polynomial', PolynomialFeatures(degree= 2, include_bias=False)),\n","                            ('scaler', StandardScaler()),\n","                            ('model', LinearRegression())\n","                            ])\n","                          "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1z6phbu0SMZo","executionInfo":{"status":"ok","timestamp":1629717459446,"user_tz":-420,"elapsed":30,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"d3de44df-748c-4326-9aeb-334702785b4b"},"source":["# Fit this pipeline on the entire dataset\n","final_pipeline.fit(X , y)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pipeline(memory=None,\n","         steps=[('polynomial',\n","                 PolynomialFeatures(degree=2, include_bias=False,\n","                                    interaction_only=False, order='C')),\n","                ('scaler',\n","                 StandardScaler(copy=True, with_mean=True, with_std=True)),\n","                ('model',\n","                 LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,\n","                                  normalize=False))],\n","         verbose=False)"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","metadata":{"id":"cme04BFiSvnV"},"source":["# create 3 new records for 3 clients\n","new_clients = [[5, 17, 15], \n","               [4, 32, 22],\n","               [8, 3, 12]]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gQEpouqXSylU","executionInfo":{"status":"ok","timestamp":1629717459447,"user_tz":-420,"elapsed":26,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"b83dfc3b-e716-4c66-d8c9-99eec101cd1c"},"source":["# Predict MEDV of each record\n","client_preds = final_pipeline.predict(new_clients)\n","client_preds"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 327950.18390708,  347416.94630115, 1020603.8898358 ])"]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","metadata":{"id":"tflczVHDIZc6"},"source":["* The result seems unreasonable because the MEDV of the second client which has fewer room and higher LSTAT is higher than the MEDV of the second client."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A8bmguwhVLBt","executionInfo":{"status":"ok","timestamp":1629717459448,"user_tz":-420,"elapsed":24,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"e0e04792-d0df-46f4-eba3-93366dc290a7"},"source":["# I use extra way to find out the appropriate degree \n","X_train, X_test, y_train, y_test = train_test_split(X , y, test_size = .2, random_state = 42)\n","# create two empty lists of MAE\n","lst_train_MAE = []  \n","lst_test_MAE = []\n","# calculate MAE of each diff degrees\n","for i in range (2,10):\n","  final_pipeline = Pipeline([('polynomial', PolynomialFeatures(degree= i, include_bias=False)),\n","                            ('scaler', StandardScaler()),\n","                            ('model', LinearRegression())\n","                            ])\n","  # fit data\n","  final_pipeline.fit(X_train,y_train)  \n","  # predict data\n","  y_train_pred= final_pipeline.predict(X_train)  \n","  y_test_pred = final_pipeline.predict(X_test)  \n","  # append results to list\n","  lst_train_MAE.append(mean_absolute_error(y_train,y_train_pred))\n","  lst_test_MAE.append(mean_absolute_error(y_test,y_test_pred))\n","#  print result\n","print(lst_train_MAE)\n","print(lst_test_MAE)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[52105.05238980076, 49728.1415625552, 46725.514865066754, 43648.547858409955, 40003.51653566754, 37378.752376880846, 33096.9757444762, 27180.698086641965]\n","[49737.64090564804, 48324.77705979761, 44642.35136799709, 43982.02724724202, 50209.80246599736, 55393.59022247686, 87958.13530205283, 268482.7693987765]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"6HY9TZCuM0Pr","executionInfo":{"status":"ok","timestamp":1629717459449,"user_tz":-420,"elapsed":22,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"b08d6d60-9751-4d81-898b-31346fcf4d87"},"source":["# ploting two MAE lines\n","# line 1\n","x1 = [i for i in range(2,10)]\n","y1 = lst_train_MAE\n","# plotting the line 1 points \n","plt.plot(x1, y1, label = \"MAE train\")\n","# line 2 points\n","x2 = [i for i in range(2,10)]\n","y2 = lst_test_MAE\n","# plotting the line 2 points \n","plt.plot(x2, y2, label = \"MAE test\")\n","plt.xlabel('Degree')\n","# Set the y axis label of the current axis.\n","plt.ylabel('MAE')\n","# Set a title\n","plt.title('Two MAE lines of two datasets')\n","# show a legend on the plot\n","plt.legend()\n","# Display a figure.\n","plt.show()\n"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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+CnRJdGrCSf7ic63XE/UQthE9JfzV4fY1T59R6EOfyU6X/Fq6Crq63pL98/mm0RdYa8R/YLvv8gitIx+ADxJ9At+HvB40rZ/BF4CNpnZtlD2GeA6M2sBvsHAPyKmAfcShcEroe59x7sYKAJeJvrO7wUOGuY4HwPqzayZKFzTem/WeGcaLExERNJNLRcREUk7hYuIiKSdwkVERNJO4SIiImkXz3YFcsUBBxzgs2fPznY1RETyysqVK7e5+5TB5QqXYPbs2axYsSLb1RARyStmtjZVubrFREQk7RQuIiKSdgoXERFJO51zGUZ3dzfr1q1j586d2a5K3ispKWHmzJkUFhZmuyoiMgoULsNYt24dlZWVzJ49GzMbeQNJyd3Zvn0769atY86cOdmujoiMAnWLDWPnzp1MnjxZwbKfzIzJkyerBSgyjihcRqBgSQ99jyLji8JFRGS82tkENV+DbavTvmuFS44zMz760Y/2v08kEkyZMoVzzjlnwHrnn38+CxcuHFB27bXXMmPGDObPn98/NTY2Dlinvr6eO++8c5/q9u53v3ufthORHLFmGTz5U2jbkvZdK1xyXHl5OS+++CIdHdG4WEuXLmXGjIFDmTc2NrJy5Uqampp49dVXByz7whe+wHPPPdc/TZgwYcDy4cIlkUgMW7cnnnhibz+OiOSS2hoomQAzj0v7rhUueeDss8/mwQcfBGDRokVceOGFA5bfd999vP/97+eCCy7grrvu2qt9X3XVVTz22GPMnz+fG264gVtvvZVzzz2XU045hVNPPZXW1lZOPfVUjj76aObNm8f999/fv21FRQUAy5cv5+STT+ZDH/oQb3nLW7jooovQIHQiOa63F1YvhUNPhVj6LxzWpch76Jv/+xIvb2hO6z6PmF7FNe9/24jrXXDBBVx33XWcc845PP/881x22WU89thj/csXLVrEN77xDaZOncoHP/hBrr766v5lN9xwA7/6VTT0+cSJE1m2bNmAfV9//fV8//vf53e/+x0At956K6tWreL5559n0qRJJBIJfvOb31BVVcW2bdtYuHAh55577m4n6J999lleeuklpk+fzvHHH8/jjz/OCSecsM/fjYhk2IZnoW0rHHZmRnavcMkDRx11FPX19SxatIizzz57wLLNmzdTV1fHCSecgJlRWFjIiy++yJFHHglE3WJf+tKX9up4p512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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"ZJd7ePGGSQ85"},"source":["* We can see that the MAE between testset and trainset of 3 degrees ranging from 2 to 5 is insignificant difference.  \n","Hence, I have to put one by one degree into the final_pipeline above to find out the effective degree."]},{"cell_type":"code","metadata":{"id":"JhLzPgETQHYL"},"source":["# Redefine pipeline\n","final_pipeline = Pipeline([('polynomial', PolynomialFeatures(degree= 3, include_bias=False)),\n","                            ('scaler', StandardScaler()),\n","                            ('model', LinearRegression())\n","                            ])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"07V4KPUIWNGN","executionInfo":{"status":"ok","timestamp":1629720462808,"user_tz":-420,"elapsed":682,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"a36427de-6e28-4458-98ed-5d3193e0be89"},"source":["# Fit this pipeline on the entire dataset\n","final_pipeline.fit(X , y)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pipeline(memory=None,\n","         steps=[('polynomial',\n","                 PolynomialFeatures(degree=3, include_bias=False,\n","                                    interaction_only=False, order='C')),\n","                ('scaler',\n","                 StandardScaler(copy=True, with_mean=True, with_std=True)),\n","                ('model',\n","                 LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,\n","                                  normalize=False))],\n","         verbose=False)"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","metadata":{"id":"Vwq9mqf4WQtW"},"source":["# create 3 new records for 3 clients\n","new_clients = [[5, 17, 15], \n","               [4, 32, 22],\n","               [8, 3, 12]]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Sa52pD5mWTP1","executionInfo":{"status":"ok","timestamp":1629720467091,"user_tz":-420,"elapsed":476,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"6b4ebb7c-c9e9-4aca-d044-fd77ab4632b2"},"source":["# Predict MEDV of each record\n","client_preds = final_pipeline.predict(new_clients)\n","client_preds"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 347348.43988885,  130598.67953711, 1098234.85090188])"]},"metadata":{},"execution_count":66}]},{"cell_type":"markdown","metadata":{"id":"fjRvZSbTWn5w"},"source":["* After trying out with individual degree, I think the best degree might be 3."]},{"cell_type":"markdown","metadata":{"id":"c91GcJAK_g1W"},"source":["After you have your variable `client_preds`, run this code to visualize your predictions against the home prices (MEDV)\n","\n","```python\n","import matplotlib.pyplot as plt\n","for i,price in enumerate(client_preds):\n","    plt.hist(y, bins = 30,color='r',ec='black')\n","    plt.axvline(price, lw = 3)\n","    plt.text(price-50000, 40, 'Client '+str(i+1), rotation=90)\n","```\n","\n","Note that \n","- `client_preds` should be a vector of size 3 (since we only have 3 records in the new test set) \n","- `y` should be the column MEDV in the dataset you use to train"]},{"cell_type":"code","metadata":{"id":"LwoWyxr4BEcU","colab":{"base_uri":"https://localhost:8080/","height":278},"executionInfo":{"status":"ok","timestamp":1629717460981,"user_tz":-420,"elapsed":7,"user":{"displayName":"Thái Trương","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg_2IQAMFkDMdY5K2jPld4XZIMt_KqpkK_tUOEmsw=s64","userId":"11351274370765791143"}},"outputId":"358a1ea8-6467-4dff-c736-bd717ceeb4f6"},"source":["# your code here\n","import matplotlib.pyplot as plt\n","for i,price in enumerate(client_preds):\n","    plt.hist(df['MEDV'], bins = 30,color='r',ec='black')\n","    plt.axvline(price, lw = 3)\n","    plt.text(price-50000, 40, 'Client '+str(i+1), rotation=90)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAXAAAAEFCAYAAAD69rxNAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAVf0lEQVR4nO3df5BdZZ3n8feXhISINBEISRbciTjIbDBlhIZV2cWBOFNZGQFr1RVGjFXZpWZkcOIu7gb9h3XHQmdqhoygZUWgJkuJGJxhAZ2BwRSKiz+wsyAhsBjNBpdMSDIIw48NkMB3/7gnsdO53ff2j3NPP93vV9WtPr/uPd++efLpc597znMiM5EkleewpguQJI2NAS5JhTLAJalQBrgkFcoAl6RCzezlzo477rhctGjRqJ+3afs/HZhecsLRE1iRdDDbmuoynra1cePGf8zMeUOX9zTAFy1axMDAwOift/rbB6YHPn/eRJYkHcS2prqMp21FxBPtltuFIkmFMsAlqVAGuCQVygCXpEIZ4JJUKANckgplgEtSoQxwSSqUAS5JhTLApRrMiSDaPOZENF2appCeXkovTRcvAe3udWV8ayJ5BC5JhTLAJalQBrg0SdhvrtGyD1yaJOw312h5BC5JhTLAJalQXXWhRMQ24HngVWBfZvZHxDHAN4BFwDbgQ5n5TD1lSpKGGs0R+DmZuTQz+6v51cCGzDwZ2FDNS5J6ZDxdKBcA66rpdcCF4y9HktStbgM8gb+PiI0RcWm1bH5m7qimnwLmt3tiRFwaEQMRMbB79+5xlitJ2q/b0wj/VWZuj4jjgXsi4n8PXpmZGRHtzoAiM9cCawH6+/vbbiNJGr2ujsAzc3v1cxdwG3AmsDMiFgJUP3fVVaQk6VAdAzwijoyIo/ZPA78LPALcAayoNlsB3F5XkZKkQ3XThTIfuC1al/POBG7OzLsi4ifA+ohYCTwBfKi+MiVJQ3U8As/MrZn5tupxamZ+rlr+dGYuy8yTM/M9mfmr0e787rvv5oYbbmDbtm0HLb/xxhtH+1LSmHz2s59tugQVLDNZv349t956K5nJhg0b+MQnPsGXv/xlXnvttdr339iVmJ/+9Kf53Oc+x6ZNm1i2bBnXXnvtgXXXXXddU2Vpmrn++uubLkEFu+yyy1i/fj033XQTl1xyCV/5ylc444wzuO+++/jkJz9Z+/4bG8zqzjvv5MEHH2TmzJlcddVVXHzxxWzdupVrrrmGTE9W0cTp6+truzwz2bNnT4+r0VTy/e9/n02bNrF3714WLFjAjh07mDVrFhdddBGnnXZa7ftv7Ah83759zJzZ+vsxd+5c7rzzTp577jk++MEP8sorrzRVlqaguXPnsmXLFp577rmDHs8//zwLFy5sujwVbH+GHX744ZxxxhnMmjXrwPLDDqs/XhsL8De/+c1873vfOzA/Y8YMbrjhBk455RQee+yxpsrSFPTRj36UJ554ou26iy++uMfVaCpZsGABL7zwAgB33XXXgeVPPfXUgTCvU/Syu6K/vz8HBgYADnx0nTNnziHbbd++nRNOOOHA/KLV3z4wve3z59VcpaaziWprETHs2N7D/Z8by3M0Ob344ou8+OKLHH/88QeWjadtRcTGQeNQHdBYH3i74N5vcHhLUmmOPPJIjjzyyNr34x15pB6aTetIW5oIBrjUQy/T/rZp4K3TNHqN35Hnkksu6WqZNF62NdWlqbbVeIBv3rz5oPlXX32VjRs3NlSNpjLbmurSVNtqLMCvvvpqjjrqKB5++GH6+vro6+vjqKOO4vjjj+eCCy5oqixNQXW1tTkRxDAPTQ9N51hjAX7llVfy/PPP86lPfeqgCyuefvpprr766qbK0hRUV1t7iVZ/druHpoemc6zxLzGvvvpqtm/fzhNPPMG+ffsOLD/77LMbrEpTkW1NdWmqbTUe4KtXr+aWW25h8eLFzJgxA2idZuV/Kk0025rq0lTbajzAb7vtNh5//HFmz57ddCma4mxrqktTbavxs1BOOukk9u7d23QZmgZsa6pLU22r8SPw173udSxdupRly5Yd9Nfri1/8YoNVaSqyrakuTbWtxgP8/PPP5/zzz2+6DE0DtjXVpam21XiAr1ixgj179vDLX/6SU045pelyNIXZ1lSXptpW433gd955J0uXLmX58uUAPPTQQx4lqRa2NdWlqbbVeIBfddVVPPDAA8ydOxeApUuXsnXr1oar0lRkW1NdmmpbjQf44YcfztFHH33Qsl7cikjTj21NdWmqbTXeek899VRuvvlmXn31VbZs2cLll1/Ou971rqbL0hRkW1NdmmpbjQf4tddey+bNm5k9ezYXXXQRfX19rFmzpumyNAXZ1lSXptpWY/fEHA3viale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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"5TjIFnYmBEwr"},"source":["Do these prices seem reasonable given the values for the respective features?"]},{"cell_type":"markdown","metadata":{"id":"UFaBXprRaws6"},"source":["**Answer:** In my opinion, the result seems reasonable because the MEDV for client 2 ($130598.67) is the lowest of the three based on its features (4 rooms, high poverty level, high student-teacher ratio). Moreover, the third client (8 rooms, low poverty level, low student-teacher ratio) comes with the highest MEDV (1098234.85)"]},{"cell_type":"markdown","metadata":{"id":"Wwq9I7Nor0CP"},"source":["# Step 6: Applicability\n","\n","In a few sentences, discuss whether the constructed model should or should not be used in a real-world setting.\n","\n","Hint: Take a look at the range in prices as calculated in the code snippet above. Some questions to answering:\n","\n","- How relevant today is data that was collected from 1978? How important is inflation?\n","- Are the features present in the data sufficient to describe a home? Do you think factors like quality of apppliances in the home, square feet of the plot area, presence of pool or not etc should factor in?\n","- Is the model robust enough to make consistent predictions?\n","Would data collected in an urban city like Boston be applicable in a rural city?\n","- Is it fair to judge the price of an individual home based on the characteristics of the entire neighborhood?"]},{"cell_type":"markdown","metadata":{"id":"fV33S775cdvv"},"source":["**Answer:**"]},{"cell_type":"markdown","metadata":{"id":"63KdMJKrcE7-"},"source":["* The data is irrelevant since it was not updated with the current scenarios in the today's world.  \n","And we already know that inflation has a great impact not only on the price of houses but also on every single thing measured by money."]},{"cell_type":"markdown","metadata":{"id":"95UnaNEDglIj"},"source":["* The features present in the data was insufficient to describe a home because there are various factors such as quality of appliances, square feet of the plot area,... can determine the value of houses"]},{"cell_type":"markdown","metadata":{"id":"WiMTUs9Ih5r5"},"source":["* Frankly speaking, this model cannot be used to predict new dataset because of inadequate records (only 489), features (3 features) and the MAE of both cross validation with degree=2 and train-test split methods is too high - \\$56091, \\$64277 respectively.  \n","We definitely assert that data collected in an urban city like Boston cannot be applicable in a rural city because the circumstances like living standards, costs, neighborhoods,...  of two places are too differrent"]},{"cell_type":"markdown","metadata":{"id":"3KC-_SE1wWb9"},"source":["* Of course, it is unfair to judge the price of an individual home based on the characteristics of the entire neighborhood. As I mentioned above, the value of houses can be affected by many factors. It would be more sensible when we combine it with other features."]}]}